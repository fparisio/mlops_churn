# Patch generated by Pyment v0.3.3

--- a/churn_script_logging_and_tests.py
+++ b/churn_script_logging_and_tests.py
@@ -42,10 +42,8 @@
 def input_df(input_path):
     """load input dataframe
 
-    Args:
-      input_path(str): path to the input csv data
-
-    Returns:
+    :param input_path: path to the input csv data
+    :type input_path: str
 
     """
     input_df = cls.import_data(input_path)
@@ -110,14 +108,18 @@
 def pipeline(input_df, categorical_features, features_to_keep):
     """
 
-    Args:
-      input_df(pandas.DataFrame): pytest fixture for the input dataframe
-      categorical_features(list): pytest fixture to pass categorical
+    :param input_df: pytest fixture for the input dataframe
+    :type input_df: pandas.DataFrame
+    :param categorical_features: pytest fixture to pass categorical
+    :type categorical_features: list
+    :param categorical_features: pytest fixture to pass categorical
       features
-      features_to_keep(list): pytest fixture to of the result of features
+    :type categorical_features: list
+    :param features_to_keep: pytest fixture to of the result of features
+    :type features_to_keep: list
+    :param features_to_keep: pytest fixture to of the result of features
       engineering
-
-    Returns:
+    :type features_to_keep: list
 
     """
     pipeline = cls.Pipeline(input_df, categorical_features, features_to_keep)
@@ -128,14 +130,17 @@
 def feature_engineering(input_df, categorical_features, features_to_keep, split_ratio):
     """
 
-    Args:
-      input_df(pandas.DataFrame): pytest fixture for the input dataframe
-      categorical_features(list): pytest fixture to pass categorical
+    :param input_df: pytest fixture for the input dataframe
+    :type input_df: pandas.DataFrame
+    :param categorical_features: pytest fixture to pass categorical
+    :type categorical_features: list
+    :param categorical_features: pytest fixture to pass categorical
       features
-      features_to_keep(str): pytest fixture to pass final features
-      split_ratio(float): pytest fixture to pass the ratio training-testing
-
-    Returns:
+    :type categorical_features: list
+    :param features_to_keep: pytest fixture to pass final features
+    :type features_to_keep: str
+    :param split_ratio: pytest fixture to pass the ratio training-testing
+    :type split_ratio: float
 
     """
     pipeline = cls.Pipeline(input_df, categorical_features, features_to_keep)
@@ -150,13 +155,9 @@
     def test_import(self, input_path):
         """test data import
 
-        Args:
-          input_path(str): fixture path to input files
-
-        Returns:
-
-        Raises:
-          err: FileNotFoundError to check correct import
+        :param input_path: fixture path to input files
+        :type input_path: str
+        :raises err: FileNotFoundError to check correct import
 
         """
         try:
@@ -169,13 +170,9 @@
     def test_non_null_dataframe(self, input_df):
         """test non-empty dataframe
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: Assertion error to check non-empty dataframe
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: Assertion error to check non-empty dataframe
 
         """
         try:
@@ -195,13 +192,9 @@
     def test_plot_histogram_churn(self, input_df):
         """test the histogram of churn plot
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correck plot of histogram 
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correck plot of histogram
 
         """
 
@@ -216,13 +209,9 @@
     def test_plot_histogram_age(self, input_df):
         """test the histogram of customer age plot
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correck plot of histogram 
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correck plot of histogram
 
         """
 
@@ -237,13 +226,9 @@
     def test_plot_histogram_total_transactions(self, input_df):
         """test the plot of histogram of total transactions
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correck plot of histogram 
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correck plot of histogram
 
         """
 
@@ -258,13 +243,9 @@
     def test_plot_count_marital_status(self, input_df):
         """test the plot of value count of marital status
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correck plot of histogram 
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correck plot of histogram
 
         """
 
@@ -279,13 +260,9 @@
     def test_plot_heatmap(self, input_df):
         """test the plot of the data frame heatmap
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correck heatmap
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correck heatmap
 
         """
 
@@ -300,13 +277,9 @@
     def test_run_sequential_eda(self, input_df):
         """test the plot of the data frame heatmap
 
-        Args:
-          input_df(pandas.DataFrame): pytest fixture for the input dataframe
-
-        Returns:
-
-        Raises:
-          err: TypeError to check correct EDA execution
+        :param input_df: pytest fixture for the input dataframe
+        :type input_df: pandas.DataFrame
+        :raises err: TypeError to check correct EDA execution
 
         """
 
@@ -330,14 +303,11 @@
     def test_category_list(self, pipeline, features_to_keep):
         """test encoder helper
 
-        Args:
-            pipeline(TYPE): Description
-            features_to_keep(str): pytest fixture to pass final features
-
-        Returns:
-
-        Raises:
-          err: AssertionError to check proper categorical variables
+        :param pipeline: Description
+        :type pipeline: TYPE
+        :param features_to_keep: pytest fixture to pass final features
+        :type features_to_keep: str
+        :raises err: AssertionError to check proper categorical variables
 
         """
         encoded_df = pipeline.encoder_helper()
@@ -352,13 +322,13 @@
     def test_columns_feature_engineering(self, pipeline, features_to_keep, split_ratio):
         """test perform_feature_engineering
 
-        Args:
-          pipeline(TYPE): Description
+        :param pipeline: Description
             features_to_keep(str): pytest fixture to pass final features
             split_ratio(float): pytest fixture to pass the ratio training-testing
-
-        Raises:
-          err: AssertionError to check proper feature engineering
+        :type pipeline: TYPE
+        :param features_to_keep: 
+        :param split_ratio: 
+        :raises err: AssertionError to check proper feature engineering
 
         """
         xtrain, _, _, _ = pipeline.perform_feature_engineering(split_ratio)
@@ -379,14 +349,11 @@
     def test_data_split(self, pipeline, split_ratio):
         """test perform_feature_engineering
 
-        Args:
-          pipeline(TYPE): Description
-          split_ratio(float): pytest fixture to pass the ratio training-testing
-    
-        Returns:
-
-        Raises:
-          err: AssertionError to check proper data split
+        :param pipeline: Description
+        :type pipeline: TYPE
+        :param split_ratio: pytest fixture to pass the ratio training-testing
+        :type split_ratio: float
+        :raises err: AssertionError to check proper data split
 
         """
         xtrain, xtest, ytrain, ytest = pipeline.perform_feature_engineering(
@@ -439,13 +406,9 @@
     def test_train_models(self, feature_engineering):
         """test train_models
 
-        Args:
-          feature_engineering(TYPE): Description
-
-        Returns:
-
-        Raises:
-          err: AssertionError to check proper train of models
+        :param feature_engineering: Description
+        :type feature_engineering: TYPE
+        :raises err: AssertionError to check proper train of models
 
         """
         xtrain, xtest, ytrain, ytest = feature_engineering
@@ -460,14 +423,12 @@
     def test_create_models_large(self, pipeline, feature_engineering):
         """Summary
 
-        Args:
-          pipeline(TYPE): Description
-          features_to_keep(str): pytest fixture to pass final features
-
-        Returns:
-
-        Raises:
-          err: AssertionError to check models are generated correctly
+        :param pipeline: Description
+        :type pipeline: TYPE
+        :param features_to_keep: pytest fixture to pass final features
+        :type features_to_keep: str
+        :param feature_engineering: 
+        :raises err: AssertionError to check models are generated correctly
 
         """
 
